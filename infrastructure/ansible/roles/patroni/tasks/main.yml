---
- name: Installer les paquets système requis
  yum:
    name:
      - epel-release
      - gcc
      - python3
      - python3-pip
      - python3-devel
      - libpq-devel
      - sudo
      - curl
    state: present

- name: Télécharger le dépôt PGDG
  get_url:
    url: https://download.postgresql.org/pub/repos/yum/reporpms/EL-9-x86_64/pgdg-redhat-repo-latest.noarch.rpm
    dest: /tmp/pgdg-redhat-repo-latest.noarch.rpm

- name: Installer le dépôt PGDG
  command: dnf install -y --nogpgcheck /tmp/pgdg-redhat-repo-latest.noarch.rpm

- name: Désactiver le module AppStream PostgreSQL
  shell: dnf -qy module disable postgresql

- name: Installer PostgreSQL 16 depuis PGDG
  yum:
    name:
      - postgresql16
      - postgresql16-server
      - postgresql16-contrib
    state: present

- name: Créer un virtualenv Python pour Patroni
  command: python3 -m venv /opt/patroni-venv
  args:
    creates: /opt/patroni-venv

- name: Mettre à jour pip, setuptools et wheel
  pip:
    virtualenv: /opt/patroni-venv
    name:
      - pip
      - setuptools
      - wheel
    state: latest

- name: Installer Patroni et ses dépendances
  pip:
    virtualenv: /opt/patroni-venv
    name:
      - patroni
      - psycopg2-binary
      - python-etcd
- name: Rendre patronictl accessible globalement
  file:
    src: /opt/patroni-venv/bin/patronictl
    dest: /usr/local/bin/patronictl
    state: link
    force: yes

- name: Vérifier que psycopg2 est bien installé
  command: /opt/patroni-venv/bin/python -c "import psycopg2"
  register: psycopg_check
  failed_when: psycopg_check.rc != 0

- name: Déployer le fichier de configuration Patroni
  template:
    src: templates/patroni.yml.j2
    dest: /etc/patroni.yml
    mode: '0644'

- name: Déployer le service systemd de Patroni
  template:
    src: templates/patroni.service.j2
    dest: /etc/systemd/system/patroni.service
    mode: '0644'


- name: demarer systemd et démarrer Patroni
  systemd:
    name: patroni
    daemon_reload: yes
    enabled: yes
    state: started
    
- name: Ajouter les nœuds replicas dans pg_hba.conf sur tous les nœuds
  lineinfile:
    path: /var/lib/pgsql/16/data/pg_hba.conf
    line: "host replication replicator {{ hostvars[item]['ansible_host'] }}/32 md5"
    insertafter: '^#.*TYPE.*DATABASE.*USER.*ADDRESS.*METHOD'
    state: present
  loop: "{{ groups['patroni'] | difference([inventory_hostname]) }}"
  notify: Restart Patroni
  
- name: Redemarrer systemd et démarrer Patroni
  systemd:
    name: patroni
    daemon_reload: yes
    enabled: yes
    state: restarted